--[[		file	: xaloy-core-log.lua		author	: drzunny		updated	: 2012-06-30--]]require("libxtools")local xlog = {}-------------- helper functions' declaration --------------local printdatalocal html_template = [[	<html>		<head>			<title>$title$ test result</title>		</head>		<body>			<h1>$title$ test result</h1>			<hr/>					</body>	</html>]]-------------- xaloy log module api --------------xlog.write = function(txt, without_time)		local env = require("xaloy-core-env")	local datetime = env.getdate()	local path = _LOG_PATH_ .. datetime.fdate .. ".txt"	local f = io.open(path, "a")	if f == nil then		collectgarbage("collect")		os.execute("mkdir ".. _LOG_PATH_)		os.execute("mkdir " .. _HTML_PATH_)		f = io.open(path, "a")	end	if without_time ~= true then		f:write(datetime.logstr .. "  |  ")	end	f:write(txt .. '\n')	f:close()	env = nil	collectgarbage("collect")endxlog.debug = function(obj)	libxtools.debug("this object is:")	if type(obj) == "string" or type(obj) == "number" then		print(obj)	else		printdata(obj)	endendxlog.error = function(msg, ...)	libxtools.error(string.format(msg, ...))	xlog.write("[ERROR]    "..string.format(msg, ...))endxlog.ok = function(msg, ...)	libxtools.ok(string.format(msg, ...))	xlog.write("[OK]       "..string.format(msg, ...))endxlog.message = function(msg, ...)	libxtools.message(string.format(msg, ...))		xlog.write("[MESSAGE]  "..string.format(msg, ...))endxlog.log = function(msg, ...)	libxtools.printline(string.format(msg, ...))	xlog.write(string.format(msg, ...))endxlog.html = function(xcase, xresult)end-------------- helper functions' implementations --------------printdata = function(data, prefix)	if prefix == nil then		prefix = ''	end		-- print object	for i, v in pairs(data) do						if type(v) == "string" or type(v) == "number" then			print(string.format("%s'%s' = %s", prefix, tostring(i), tostring(v)))		else			print(prefix.."'"..i.."' elements:")			printdata(v, prefix..'\t')		end	endend--------- return xaloy's log module ----------return xlog